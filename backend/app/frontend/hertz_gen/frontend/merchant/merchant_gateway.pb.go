// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: merchant_gateway.proto

package merchant

import (
	_ "github.com/tiktokmall/backend/app/frontend/hertz_gen/api"
	common "github.com/tiktokmall/backend/app/frontend/hertz_gen/frontend/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MerchantRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" form:"code" json:"code,omitempty"`
}

func (x *MerchantRegisterReq) Reset() {
	*x = MerchantRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantRegisterReq) ProtoMessage() {}

func (x *MerchantRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantRegisterReq.ProtoReflect.Descriptor instead.
func (*MerchantRegisterReq) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *MerchantRegisterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *Category) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// {
// }
type MerchantAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MerchantAuthReq) Reset() {
	*x = MerchantAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantAuthReq) ProtoMessage() {}

func (x *MerchantAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantAuthReq.ProtoReflect.Descriptor instead.
func (*MerchantAuthReq) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{2}
}

// {
// "name": "电视",
// "price": 19.2,
// "description": "这是一段描述",
// "categories": [
// {
// "id": 1,
// "name": "电视",
// "description": "这是一段描述"
// },
// {
// "id": 2,
// "name": "t-shirt",
// "description": "t-shirt"
// }
// ],
// "img_url": "static/a.png",
// "slider_imgs": [
// "static/a.png",
// "http://127.0.0.1:xxx/aaa.mp4"
// ]
// }
type MerchantAddProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Price       float32     `protobuf:"fixed32,2,opt,name=price,proto3" form:"price" json:"price,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	Categories  []*Category `protobuf:"bytes,4,rep,name=categories,proto3" form:"categories" json:"categories,omitempty"`
	ImgUrl      string      `protobuf:"bytes,5,opt,name=img_url,json=imgUrl,proto3" form:"img_url" json:"img_url,omitempty"`
	SliderImgs  []string    `protobuf:"bytes,6,rep,name=slider_imgs,json=sliderImgs,proto3" form:"slider_imgs" json:"slider_imgs,omitempty"`
	Mid         int64       `protobuf:"varint,7,opt,name=mid,proto3" form:"mid" json:"mid,omitempty"`
	Stock       int32       `protobuf:"varint,8,opt,name=stock,proto3" form:"stock" json:"stock,omitempty"`
}

func (x *MerchantAddProductReq) Reset() {
	*x = MerchantAddProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantAddProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantAddProductReq) ProtoMessage() {}

func (x *MerchantAddProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantAddProductReq.ProtoReflect.Descriptor instead.
func (*MerchantAddProductReq) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *MerchantAddProductReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantAddProductReq) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MerchantAddProductReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MerchantAddProductReq) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *MerchantAddProductReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *MerchantAddProductReq) GetSliderImgs() []string {
	if x != nil {
		return x.SliderImgs
	}
	return nil
}

func (x *MerchantAddProductReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MerchantAddProductReq) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

// {
// "mid": 1,
// "pid": 2
// }
type MerchantDeleteProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" form:"mid" json:"mid,omitempty"`
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" form:"pid" json:"pid,omitempty"`
}

func (x *MerchantDeleteProductReq) Reset() {
	*x = MerchantDeleteProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantDeleteProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDeleteProductReq) ProtoMessage() {}

func (x *MerchantDeleteProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDeleteProductReq.ProtoReflect.Descriptor instead.
func (*MerchantDeleteProductReq) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *MerchantDeleteProductReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MerchantDeleteProductReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// {
// "mid": 100,
// "pid": 100,
// "name": "电视",
// "price": 19.2,
// "stock": 20,
// "description": "这是一段描述",
// "categories": [
// {
// "id": 1,
// "name": "电视",
// "description": "这是一段描述"
// },
// {
// "id": 2,
// "name": "t-shirt",
// "description": "t-shirt"
// }
// ],
// "img_url": "static/a.png",
// "slider_imgs": [
// "static/a.png",
// "http://127.0.0.1:xxx/aaa.mp4"
// ]
// }
type MerchantUpdateProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid         int64       `protobuf:"varint,1,opt,name=pid,proto3" form:"pid" json:"pid,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	Price       float32     `protobuf:"fixed32,3,opt,name=price,proto3" form:"price" json:"price,omitempty"`
	Description string      `protobuf:"bytes,4,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	Categories  []*Category `protobuf:"bytes,5,rep,name=categories,proto3" form:"categories" json:"categories,omitempty"`
	ImgUrl      string      `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" form:"img_url" json:"img_url,omitempty"`
	SliderImgs  []string    `protobuf:"bytes,7,rep,name=slider_imgs,json=sliderImgs,proto3" form:"slider_imgs" json:"slider_imgs,omitempty"`
	Mid         int64       `protobuf:"varint,8,opt,name=mid,proto3" form:"mid" json:"mid,omitempty"`
	Stock       int32       `protobuf:"varint,9,opt,name=stock,proto3" form:"stock" json:"stock,omitempty"`
}

func (x *MerchantUpdateProductReq) Reset() {
	*x = MerchantUpdateProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantUpdateProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantUpdateProductReq) ProtoMessage() {}

func (x *MerchantUpdateProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantUpdateProductReq.ProtoReflect.Descriptor instead.
func (*MerchantUpdateProductReq) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *MerchantUpdateProductReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MerchantUpdateProductReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantUpdateProductReq) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MerchantUpdateProductReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MerchantUpdateProductReq) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *MerchantUpdateProductReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *MerchantUpdateProductReq) GetSliderImgs() []string {
	if x != nil {
		return x.SliderImgs
	}
	return nil
}

func (x *MerchantUpdateProductReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MerchantUpdateProductReq) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

// {
// "name": "t",
// "category_id": 1,
// "max_stock": 10,
// "min_price": 10,
// "max_price": 20,
// "page_size": 10,
// "page_no": 1,
// "merchant_id": 1
// }
type MerchantGetProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string  `protobuf:"bytes,1,opt,name=name,proto3" form:"name" json:"name,omitempty"`
	CategoryId int64   `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" form:"category_id" json:"category_id,omitempty"`
	MaxStock   int64   `protobuf:"varint,3,opt,name=max_stock,json=maxStock,proto3" form:"max_stock" json:"max_stock,omitempty"`
	MinPrice   float32 `protobuf:"fixed32,4,opt,name=min_price,json=minPrice,proto3" form:"min_price" json:"min_price,omitempty"`
	MaxPrice   float32 `protobuf:"fixed32,5,opt,name=max_price,json=maxPrice,proto3" form:"max_price" json:"max_price,omitempty"`
	PageSize   int32   `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" form:"page_size" json:"page_size,omitempty"`
	PageNo     int32   `protobuf:"varint,7,opt,name=page_no,json=pageNo,proto3" form:"page_no" json:"page_no,omitempty"`
	MerchantId int64   `protobuf:"varint,8,opt,name=merchant_id,json=merchantId,proto3" form:"merchant_id" json:"merchant_id,omitempty"`
}

func (x *MerchantGetProductListReq) Reset() {
	*x = MerchantGetProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantGetProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantGetProductListReq) ProtoMessage() {}

func (x *MerchantGetProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantGetProductListReq.ProtoReflect.Descriptor instead.
func (*MerchantGetProductListReq) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *MerchantGetProductListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantGetProductListReq) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *MerchantGetProductListReq) GetMaxStock() int64 {
	if x != nil {
		return x.MaxStock
	}
	return 0
}

func (x *MerchantGetProductListReq) GetMinPrice() float32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *MerchantGetProductListReq) GetMaxPrice() float32 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *MerchantGetProductListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MerchantGetProductListReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *MerchantGetProductListReq) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

// {
// "mid": 1,
// "pid": 2
// }
type MerchantGetProductDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" form:"mid" json:"mid,omitempty"`
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" form:"pid" json:"pid,omitempty"`
}

func (x *MerchantGetProductDetailReq) Reset() {
	*x = MerchantGetProductDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantGetProductDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantGetProductDetailReq) ProtoMessage() {}

func (x *MerchantGetProductDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantGetProductDetailReq.ProtoReflect.Descriptor instead.
func (*MerchantGetProductDetailReq) Descriptor() ([]byte, []int) {
	return file_merchant_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *MerchantGetProductDetailReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MerchantGetProductDetailReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

var File_merchant_gateway_proto protoreflect.FileDescriptor

var file_merchant_gateway_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x1a, 0x09, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a,
	0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x73, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02,
	0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x22, 0xea, 0x02, 0x0a, 0x15, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72,
	0x6c, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x6c, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0f,
	0xca, 0xbb, 0x18, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x67, 0x73, 0x52,
	0x0a, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6d, 0x69,
	0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x50, 0x0a, 0x18, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18,
	0x03, 0x70, 0x69, 0x64, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x18, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x70, 0x69, 0x64, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x42, 0x09,
	0xca, 0xbb, 0x18, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x52, 0x06,
	0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x6d, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18,
	0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x67, 0x73, 0x52, 0x0a, 0x73, 0x6c,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6d, 0x69, 0x64, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x22, 0xf3, 0x02, 0x0a, 0x19, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x2a,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x42, 0x0d, 0xca,
	0xbb, 0x18, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x30, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0f, 0xca,
	0xbb, 0x18, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1b, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x6d, 0x69, 0x64, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x70, 0x69, 0x64, 0x52, 0x03, 0x70, 0x69, 0x64, 0x32,
	0x9b, 0x07, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x12, 0xca, 0xc1, 0x18, 0x0e, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x5e, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x22, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x12, 0xca, 0xc1, 0x18, 0x0e, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x71, 0x0a, 0x12, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x28, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x19, 0xd2, 0xc1, 0x18, 0x15, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x61, 0x64, 0x64, 0x12, 0x7a, 0x0a, 0x15, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0xd2, 0xc1, 0x18, 0x18, 0x2f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x7a, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x2b, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0xd2, 0xc1, 0x18, 0x18, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x7a, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x1a, 0xd2, 0xc1, 0x18, 0x16, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x80,
	0x01, 0x0a, 0x18, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1c, 0xd2, 0xc1, 0x18, 0x18, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x6a, 0x0a, 0x10, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x16, 0xd2, 0xc1, 0x18, 0x12, 0x2f, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x48, 0x5a,
	0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x6b, 0x74,
	0x6f, 0x6b, 0x6d, 0x61, 0x6c, 0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x68, 0x65, 0x72, 0x74,
	0x7a, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_merchant_gateway_proto_rawDescOnce sync.Once
	file_merchant_gateway_proto_rawDescData = file_merchant_gateway_proto_rawDesc
)

func file_merchant_gateway_proto_rawDescGZIP() []byte {
	file_merchant_gateway_proto_rawDescOnce.Do(func() {
		file_merchant_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_merchant_gateway_proto_rawDescData)
	})
	return file_merchant_gateway_proto_rawDescData
}

var file_merchant_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_merchant_gateway_proto_goTypes = []interface{}{
	(*MerchantRegisterReq)(nil),         // 0: frontend.merchant.MerchantRegisterReq
	(*Category)(nil),                    // 1: frontend.merchant.Category
	(*MerchantAuthReq)(nil),             // 2: frontend.merchant.MerchantAuthReq
	(*MerchantAddProductReq)(nil),       // 3: frontend.merchant.MerchantAddProductReq
	(*MerchantDeleteProductReq)(nil),    // 4: frontend.merchant.MerchantDeleteProductReq
	(*MerchantUpdateProductReq)(nil),    // 5: frontend.merchant.MerchantUpdateProductReq
	(*MerchantGetProductListReq)(nil),   // 6: frontend.merchant.MerchantGetProductListReq
	(*MerchantGetProductDetailReq)(nil), // 7: frontend.merchant.MerchantGetProductDetailReq
	(*common.Empty)(nil),                // 8: frontend.common.Empty
}
var file_merchant_gateway_proto_depIdxs = []int32{
	1,  // 0: frontend.merchant.MerchantAddProductReq.categories:type_name -> frontend.merchant.Category
	1,  // 1: frontend.merchant.MerchantUpdateProductReq.categories:type_name -> frontend.merchant.Category
	8,  // 2: frontend.merchant.MerchantService.MerchantPing:input_type -> frontend.common.Empty
	2,  // 3: frontend.merchant.MerchantService.MerchantAuth:input_type -> frontend.merchant.MerchantAuthReq
	3,  // 4: frontend.merchant.MerchantService.MerchantAddProduct:input_type -> frontend.merchant.MerchantAddProductReq
	4,  // 5: frontend.merchant.MerchantService.MerchantDeleteProduct:input_type -> frontend.merchant.MerchantDeleteProductReq
	5,  // 6: frontend.merchant.MerchantService.MerchantUpdateProduct:input_type -> frontend.merchant.MerchantUpdateProductReq
	6,  // 7: frontend.merchant.MerchantService.MerchantGetProductList:input_type -> frontend.merchant.MerchantGetProductListReq
	7,  // 8: frontend.merchant.MerchantService.MerchantGetProductDetail:input_type -> frontend.merchant.MerchantGetProductDetailReq
	0,  // 9: frontend.merchant.MerchantService.MerchantRegister:input_type -> frontend.merchant.MerchantRegisterReq
	8,  // 10: frontend.merchant.MerchantService.MerchantPing:output_type -> frontend.common.Empty
	8,  // 11: frontend.merchant.MerchantService.MerchantAuth:output_type -> frontend.common.Empty
	8,  // 12: frontend.merchant.MerchantService.MerchantAddProduct:output_type -> frontend.common.Empty
	8,  // 13: frontend.merchant.MerchantService.MerchantDeleteProduct:output_type -> frontend.common.Empty
	8,  // 14: frontend.merchant.MerchantService.MerchantUpdateProduct:output_type -> frontend.common.Empty
	8,  // 15: frontend.merchant.MerchantService.MerchantGetProductList:output_type -> frontend.common.Empty
	8,  // 16: frontend.merchant.MerchantService.MerchantGetProductDetail:output_type -> frontend.common.Empty
	8,  // 17: frontend.merchant.MerchantService.MerchantRegister:output_type -> frontend.common.Empty
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_merchant_gateway_proto_init() }
func file_merchant_gateway_proto_init() {
	if File_merchant_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_merchant_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantAddProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantDeleteProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantUpdateProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantGetProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantGetProductDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_merchant_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_merchant_gateway_proto_goTypes,
		DependencyIndexes: file_merchant_gateway_proto_depIdxs,
		MessageInfos:      file_merchant_gateway_proto_msgTypes,
	}.Build()
	File_merchant_gateway_proto = out.File
	file_merchant_gateway_proto_rawDesc = nil
	file_merchant_gateway_proto_goTypes = nil
	file_merchant_gateway_proto_depIdxs = nil
}
