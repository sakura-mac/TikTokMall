syntax = "proto3";

package frontend.user;


import "api.proto";
import "common.proto";

option go_package = "frontend/user";

message User {
    string email = 1;
    string password = 2;
}


message UpdateUserReq {
    string email = 1 [(api.form)="email"];
    string avatar = 2 [(api.form)="avatar"];
    string name = 3 [(api.form)="name"];
}

message UpdateUserResp {
    int32 status_code = 1 [(api.body) = "status_code"];
    string msg = 2;
}

message QueryUserReq {
    int64 user_id = 1 [(api.path) = "user_id", (api.vd) = "$>0"];
}
message QueryUserResp {
    int32 status_code = 1 [(api.body) = "status_code"];
    string msg = 2;
    User user = 3;
}



message DeleteUserReq {
    int64 user_id = 1 [(api.path) = "user_id", (api.vd) = "$>0"];
}

message DeleteUserResp {
    int32 status_code = 1 [(api.body) = "status_code"];
    string msg = 2;
}

service UserService {
    rpc update(UpdateUserReq) returns (UpdateUserResp) {
        option (api.post) = "/user/update";
    };
    rpc queryUser(common.Empty) returns (QueryUserResp) {
        option (api.get) = "/user/query";
    }
    rpc deleteUser(common.Empty) returns (DeleteUserResp) {
        option (api.get) = "/user/delete";
    }
}