syntax = "proto3";

package frontend.merchant;

import "api.proto";
import "frontend/common.proto";

option go_package = "frontend/merchant";

// NOTE: 不要与 idl 文件夹下的其他 proto 文件重名
service MerchantService {
    rpc MerchantPing(common.Empty) returns(common.Empty) {
        option (api.get) = "/merchant/ping";
    }
    // 权限认证
    rpc MerchantAuth(MerchantAuthReq) returns(common.Empty) {
        option (api.get) = "/merchant/auth";
    }
    // 添加单个商品
    rpc MerchantAddProduct(MerchantAddProductReq) returns(common.Empty) {
        option (api.post) = "/merchant/product/add";
    }
    // 删除商品
    rpc MerchantDeleteProduct(MerchantDeleteProductReq) returns(common.Empty) {
        option (api.post) = "/merchant/product/delete";
    }
    // 修改商品信息（暂时没有轮播图）
    rpc MerchantUpdateProduct(MerchantUpdateProductReq) returns(common.Empty) {
        option (api.post) = "/merchant/product/update";
    }
    // 商品查询（列表）（没有轮播图）
    rpc MerchantGetProductList(MerchantGetProductListReq) returns(common.Empty) {
      option (api.post) = "/merchant/product/list";
    }
    // 商品详情 （可加轮播图）
    rpc MerchantGetProductDetail(MerchantGetProductDetailReq) returns(common.Empty) {
        option (api.get) = "/merchant/product/:id";
    }

    // 成为店家
    rpc MerchantRegister(MerchantRegisterReq) returns(common.Empty) {
        option (api.post) = "/merchant/register";
    }
}
message MerchantRegisterReq {
    string code = 1 [(api.body) = "code"];
}

message Category {
    int64 id = 1 [(api.body) = "id"];
    string name = 2 [(api.body) = "name"];
    string description = 3 [(api.body) = "description"];
}
/*
{
}
*/
message MerchantAuthReq {
}

/*
{
    "name": "电视",
    "price": 19.2,
    "description": "这是一段描述",
    "categories": [
        {
            "id": 1,
            "name": "电视",
            "description": "这是一段描述"
        },
        {
            "id": 2,
            "name": "t-shirt",
            "description": "t-shirt"
        }
    ],
    "img_url": "static/a.png",
    "slider_imgs": [
        "static/a.png",
        "http://127.0.0.1:xxx/aaa.mp4"
    ]
}
*/
message MerchantAddProductReq {
    string name = 1 [(api.body) = "name"];
    float price = 2 [(api.body) = "price"];
    string description = 3 [(api.body) = "description"];
    repeated Category categories = 4 [(api.body) = "categories"];
    string img_url = 5 [(api.body) = "img_url"];
    repeated string slider_imgs = 6 [(api.body) = "slider_imgs"];
    int32 stock = 7 [(api.body) = "stock"];
}
/*
{
    "pid": 1
}
*/
message MerchantDeleteProductReq {
    int64 pid = 1 [(api.body) = "pid"];
}

/*
{
    "pid": 100,
    "name": "电视",
    "price": 19.2,
    "stock": 20,
    "description": "这是一段描述",
    "categories": [
        {
            "id": 1,
            "name": "电视",
            "description": "这是一段描述"
        },
        {
            "id": 2,
            "name": "t-shirt",
            "description": "t-shirt"
        }
    ],
    "img_url": "static/a.png",
    "slider_imgs": [
        "static/a.png",
        "http://127.0.0.1:xxx/aaa.mp4"
    ]
}
*/
message MerchantUpdateProductReq {
    int64 pid = 1 [(api.body) = "pid"];
    string name = 2 [(api.body) = "name"];
    float price = 3 [(api.body) = "price"];
    string description = 4 [(api.body) = "description"];
    repeated Category categories = 5 [(api.body) = "categories"];
    string img_url = 6 [(api.body) = "img_url"];
    repeated string slider_imgs = 7 [(api.body) = "slider_imgs"];
    int32 stock = 8 [(api.body) = "stock"];
}
/*
{
    "name": "t",
    "category_id": 1,
    "max_stock": 10,
    "min_price": 10,
    "max_price": 20,
    "page_size": 10,
    "page_no": 1,
}
*/
message MerchantGetProductListReq {
    string name = 1 [(api.body) = "name"];
    int64 category_id = 2 [(api.body) = "category_id"];
    int64 max_stock = 3 [(api.body) = "max_stock"];
    float min_price = 4 [(api.body) = "min_price"];
    float max_price = 5 [(api.body) = "max_price"];
    int32 page_size = 6 [(api.body) = "page_size"];
    int32 page_no = 7 [(api.body) = "page_no"];
}

/*
:id
*/
message MerchantGetProductDetailReq {
    int64 id = 1 [(api.path) = "id"];
}