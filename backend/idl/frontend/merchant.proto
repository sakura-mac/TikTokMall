syntax = "proto3";

package frontend.merchant;

option go_package = "frontend/merchant";

import "api.proto";
import "frontend/common.proto";

service MerchantService {
    // 权限认证
    rpc Auth(common.Empty) returns(common.Empty) {
        option (api.get) = "/marchant/auth";
    }
    // 商品详情 （可加轮播图）
    rpc ProductDetial(common.Empty) returns(common.Empty) {
        option (api.get) = "/marchant/product/detail/:id";
    }
    // 删除商品
    rpc DeleteProduct(common.Empty) returns(common.Empty) {
        option (api.get) = "/marchant/product/delete/:id";
    }

    // 添加单个商品
    rpc AddProduct(AddProductReq) returns(common.Empty) {
      option (api.post) = "/marchant/product/add";
    }
    // 获取商品列表（没有轮播图）
    rpc GetProductListByMerchant(GetProductListByMerchantReq) returns(GetProductListByMerchantResp) {
      option (api.get) = "/marchant/product/list";
    }
    // 修改商品信息（暂时没有轮播图）
    rpc UpdateProduct(UpdateProductReq) returns(common.Empty) {
      option (api.post) = "/marchant/product/update";
    }
}

/*
{
    "name": "电视",
    "price": 19.2,
    "description": "这是一段描述",
    "category": "家电",
    "img_url": "static/a.png",
    "slider_imgs": [
        "static/a.png",
        "http://127.0.0.1:xxx/aaa.mp4"
    ]
}
*/
message AddProductReq {
    string name = 1;
    float price = 2;
    string description = 3;
    string category = 4;
    string img_url = 5;
    repeated string slider_imgs = 6;
}
/*
{
    "uid": 1,
    "product_name": "电视",
    "category_id": 1,
    "min_price": 10,
    "max_price": 20,
    "max_stock": 10,
}
*/
message GetProductListByMerchantReq {
    int64 uid = 1;
    string product_name = 2;
    int64 category_id = 3;
    float min_price = 4;
    float max_price = 5;
    int64 max_stock = 6;
}


/*
{
    "msg": "success",
    "data": [
        {
            "id": 1,
            "name": "电视",
            "category_id": 1,
            "img_url": "static/images/product1.jpg",
            "price": 1999,
            "stock": 100,
            "description": "这是一款超级好看的电视"
        }
    ]
}
*/
message GetProductListByMerchantResp {
    string msg = 1;
    repeated Product data = 2;
    
}

message Product {
    int64 id = 1;
    string name = 2;
    int64 category_id = 3;
    string img_url = 4;
    float price = 5;
    int64 stock = 6;
    string description = 7;
}



message UpdateProductReq {
    int64 id = 1;
    string name = 2;
    float price = 3;
}